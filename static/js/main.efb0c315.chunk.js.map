{"version":3,"sources":["api/FetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","console","log","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"8MAKcA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACJC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPU,sCAEa,uBACnBC,EADmB,EACnBA,KADmB,kBASpBA,GAToB,2CAAH,sD,eCmDXC,EAnDH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACA,UAAVc,EAAEC,IADQ,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAGXS,QAAQC,IAAIV,GACZK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASZ,OACE,sBAAKQ,UAAU,iBAAf,UACE,uBACEC,KAAK,OACLC,YAAY,gBACZC,MAAOtB,EACPuB,SAAU,SAACR,GAAD,OAAOJ,EAASI,EAAES,OAAOF,QACnCG,WAAYX,EACZK,UAAU,WAGXP,EAAQc,MACP,sBAAKP,UAAU,OAAf,UAEE,qBAAIA,UAAU,YAAd,UACE,+BAAOP,EAAQe,OACf,8BAAMf,EAAQgB,IAAIC,aAGpB,sBAAKV,UAAU,YAAf,UACGW,KAAKC,MAAMnB,EAAQc,KAAKM,MACzB,2CAGF,sBAAKb,UAAU,OAAf,UACA,qBACEA,UAAU,YACVc,IAAG,4CAAuCrB,EAAQA,QAAQ,GAAGsB,KAA1D,WACHC,IAAKvB,EAAQA,QAAQ,GAAGwB,cAE1B,4BAAIxB,EAAQA,QAAQ,GAAGwB,wBC3CjCC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.efb0c315.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\nexport const  fetchWeather = async (query) => {\n  const { data } = await axios.get(URL, {\n    params: {\n      q: query,\n      units: 'metric',\n      APPID: API_KEY,\n    }\n  });\n\n  return data;\n}","import React, { useState } from 'react';\n\nimport { fetchWeather } from './api/FetchWeather';\nimport './App.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = async (e) => {\n    if(e.key === 'Enter') {\n      const data = await fetchWeather(query);\n      console.log(data);\n      setWeather(data);\n      setQuery('');\n    }\n  }\n\n  return (\n    <div className=\"main-container\">\n      <input \n        type=\"text\" \n        placeholder=\"Enter city...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        onKeyPress={search}\n        className=\"search\" \n      />\n\n      {weather.main && (\n        <div className=\"city\">\n\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n\n          <div className=\"info\">\n          <img \n            className=\"city-icon\" \n            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} \n            alt={weather.weather[0].description} \n          />\n          <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}